{"remainingRequest":"/Users/thalida/Repos/shapeconnector/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/thalida/Repos/shapeconnector/src/views/Scratchpad.vue?vue&type=style&index=0&id=4ea97eda&lang=scss&scoped=true&","dependencies":[{"path":"/Users/thalida/Repos/shapeconnector/src/views/Scratchpad.vue","mtime":1570385759201},{"path":"/Users/thalida/Repos/shapeconnector/node_modules/css-loader/index.js","mtime":499162500000},{"path":"/Users/thalida/Repos/shapeconnector/node_modules/vue-loader/lib/loaders/stylePostLoader.js","mtime":499162500000},{"path":"/Users/thalida/Repos/shapeconnector/node_modules/postcss-loader/src/index.js","mtime":499162500000},{"path":"/Users/thalida/Repos/shapeconnector/node_modules/sass-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/thalida/Repos/shapeconnector/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/thalida/Repos/shapeconnector/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":["\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n.scratchpad {\n  padding: 0 100px;\n}\n\n.shape {\n  position: relative;\n  transform-style: preserve-3d;\n  transition: transform 1s;\n\n  &__face {\n    position: absolute;\n    font-size: 10px;\n    font-weight: bold;\n    color: white;\n    text-align: center;\n  }\n}\n\n$triangle-size: 100px;\n.shape--triangle {\n  transform: translateZ(-50px) rotateX(0deg) rotateY(0deg);\n  width: $triangle-size;\n  height: $triangle-size;\n\n  .shape__face {\n    &--front {\n      width: 0;\n      height: 0;\n      border-left: ($triangle-size / 2) solid transparent;\n      border-right: ($triangle-size / 2) solid transparent;\n      border-bottom: $triangle-size solid red;\n      line-height: $triangle-size;\n    }\n\n    &--left {\n      width: 0;\n      height: 0;\n      border-left: ($triangle-size / 2) solid transparent;\n      border-right: ($triangle-size / 2) solid transparent;\n      border-bottom: $triangle-size solid red;\n      line-height: $triangle-size;\n    }\n\n    &--right {\n      width: 0;\n      height: 0;\n      border-left: ($triangle-size / 2) solid transparent;\n      border-right: ($triangle-size / 2) solid transparent;\n      border-bottom: $triangle-size solid red;\n      line-height: $triangle-size;\n    }\n\n    &--bottom {\n      width: 0;\n      height: 0;\n      border-left: ($triangle-size / 2) solid transparent;\n      border-right: ($triangle-size / 2) solid transparent;\n      border-top: $triangle-size solid red;\n      line-height: $triangle-size;\n    }\n\n    &--left,\n    &--right {\n      left: 0px;\n    }\n\n    &--bottom {\n      top: 0px;\n    }\n\n    &--front  { transform: rotateY(  0deg) translateZ(($triangle-size / 2)); }\n    &--left   { transform: rotateY(-90deg) translateZ(($triangle-size / 2)); }\n    &--right  { transform: rotateY( 90deg) translateZ(($triangle-size / 2)); }\n    &--bottom { transform: rotateX(-90deg) translateZ(($triangle-size / 2)); }\n\n    &--front  { border-bottom-color: hsla(  0, 100%, 50%, 0.99); }\n    &--left   { border-bottom-color: hsla(180, 100%, 50%, 0.99); }\n    &--right  { border-bottom-color: hsla( 60, 100%, 50%, 0.99); }\n    &--bottom { border-top-color: hsla(300, 100%, 50%, 0.99); }\n  }\n}\n\n\n$cube-size: 100px;\n.shape--cube {\n  width: $cube-size;\n  height: $cube-size;\n  transform: translateZ(-50px) rotateX(0deg) rotateY(0deg);\n\n  .shape__face {\n    &--front,\n    &--back,\n    &--left,\n    &--right,\n    &--top,\n    &--bottom {\n      width: $cube-size;\n      height: $cube-size;\n      line-height: $cube-size;\n    }\n\n    &--left,\n    &--right {\n      left: 0px;\n    }\n\n    &--top,\n    &--bottom {\n      top: 0px;\n    }\n\n    &--front  { transform: rotateY(  0deg) translateZ(($cube-size / 2)); }\n    &--back   { transform: rotateY(180deg) translateZ(($cube-size / 2)); }\n\n    &--left   { transform: rotateY(-90deg) translateZ(($cube-size / 2)); }\n    &--right  { transform: rotateY( 90deg) translateZ(($cube-size / 2)); }\n\n    &--top    { transform: rotateX( 90deg) translateZ(($cube-size / 2)); }\n    &--bottom { transform: rotateX(-90deg) translateZ(($cube-size / 2)); }\n\n    &--front  { background: hsla(  0, 100%, 50%, 0.99); }\n    &--right  { background: hsla( 60, 100%, 50%, 0.99); }\n    &--back   { background: hsla(120, 100%, 50%, 0.99); }\n    &--left   { background: hsla(180, 100%, 50%, 0.99); }\n    &--top    { background: hsla(240, 100%, 50%, 0.99); }\n    &--bottom { background: hsla(300, 100%, 50%, 0.99); }\n  }\n}\n",{"version":3,"sources":["Scratchpad.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAgfile":"Scratchpad.vue","sourceRoot":"src/views","sourcesContent":["<template>\n  <div class=\"scratchpad\">\n    <h1>Scratch pad</h1>\n\n    <h2>Triangle</h2>\n    <div class=\"shape shape--triangle\">\n      <div class=\"shape__face shape__face--front\">front</div>\n      <div class=\"shape__face shape__face--left\">left</div>\n      <div class=\"shape__face shape__face--right\">right</div>\n      <div class=\"shape__face shape__face--bottom\">bottom</div>\n    </div>\n\n    <h2>Cube</h2>\n    <div class=\"shape shape--cube\">\n      <div class=\"shape__face shape__face--front\">front</div>\n      <div class=\"shape__face shape__face--back\">back</div>\n      <div class=\"shape__face shape__face--left\">left</div>\n      <div class=\"shape__face shape__face--right\">right</div>\n      <div class=\"shape__face shape__face--top\">top</div>\n      <div class=\"shape__face shape__face--bottom\">bottom</div>\n    </div>\n  </div>\n</template>\n\n<script>\nexport default {\n  name: 'scratchpad',\n  components: {}\n}\n</script>\n\n<style lang=\"scss\" scoped>\n.scratchpad {\n  padding: 0 100px;\n}\n\n.shape {\n  position: relative;\n  transform-style: preserve-3d;\n  transition: transform 1s;\n\n  &__face {\n    position: absolute;\n    font-size: 10px;\n    font-weight: bold;\n    color: white;\n    text-align: center;\n  }\n}\n\n$triangle-size: 100px;\n.shape--triangle {\n  transform: translateZ(-50px) rotateX(0deg) rotateY(0deg);\n  width: $triangle-size;\n  height: $triangle-size;\n\n  .shape__face {\n    &--front {\n      width: 0;\n      height: 0;\n      border-left: ($triangle-size / 2) solid transparent;\n      border-right: ($triangle-size / 2) solid transparent;\n      border-bottom: $triangle-size solid red;\n      line-height: $triangle-size;\n    }\n\n    &--left {\n      width: 0;\n      height: 0;\n      border-left: ($triangle-size / 2) solid transparent;\n      border-right: ($triangle-size / 2) solid transparent;\n      border-bottom: $triangle-size solid red;\n      line-height: $triangle-size;\n    }\n\n    &--right {\n      width: 0;\n      height: 0;\n      border-left: ($triangle-size / 2) solid transparent;\n      border-right: ($triangle-size / 2) solid transparent;\n      border-bottom: $triangle-size solid red;\n      line-height: $triangle-size;\n    }\n\n    &--bottom {\n      width: 0;\n      height: 0;\n      border-left: ($triangle-size / 2) solid transparent;\n      border-right: ($triangle-size / 2) solid transparent;\n      border-top: $triangle-size solid red;\n      line-height: $triangle-size;\n    }\n\n    &--left,\n    &--right {\n      left: 0px;\n    }\n\n    &--bottom {\n      top: 0px;\n    }\n\n    &--front  { transform: rotateY(  0deg) translateZ(($triangle-size / 2)); }\n    &--left   { transform: rotateY(-90deg) translateZ(($triangle-size / 2)); }\n    &--right  { transform: rotateY( 90deg) translateZ(($triangle-size / 2)); }\n    &--bottom { transform: rotateX(-90deg) translateZ(($triangle-size / 2)); }\n\n    &--front  { border-bottom-color: hsla(  0, 100%, 50%, 0.99); }\n    &--left   { border-bottom-color: hsla(180, 100%, 50%, 0.99); }\n    &--right  { border-bottom-color: hsla( 60, 100%, 50%, 0.99); }\n    &--bottom { border-top-color: hsla(300, 100%, 50%, 0.99); }\n  }\n}\n\n\n$cube-size: 100px;\n.shape--cube {\n  width: $cube-size;\n  height: $cube-size;\n  transform: translateZ(-50px) rotateX(0deg) rotateY(0deg);\n\n  .shape__face {\n    &--front,\n    &--back,\n    &--left,\n    &--right,\n    &--top,\n    &--bottom {\n      width: $cube-size;\n      height: $cube-size;\n      line-height: $cube-size;\n    }\n\n    &--left,\n    &--right {\n      left: 0px;\n    }\n\n    &--top,\n    &--bottom {\n      top: 0px;\n    }\n\n    &--front  { transform: rotateY(  0deg) translateZ(($cube-size / 2)); }\n    &--back   { transform: rotateY(180deg) translateZ(($cube-size / 2)); }\n\n    &--left   { transform: rotateY(-90deg) translateZ(($cube-size / 2)); }\n    &--right  { transform: rotateY( 90deg) translateZ(($cube-size / 2)); }\n\n    &--top    { transform: rotateX( 90deg) translateZ(($cube-size / 2)); }\n    &--bottom { transform: rotateX(-90deg) translateZ(($cube-size / 2)); }\n\n    &--front  { background: hsla(  0, 100%, 50%, 0.99); }\n    &--right  { background: hsla( 60, 100%, 50%, 0.99); }\n    &--back   { background: hsla(120, 100%, 50%, 0.99); }\n    &--left   { background: hsla(180, 100%, 50%, 0.99); }\n    &--top    { background: hsla(240, 100%, 50%, 0.99); }\n    &--bottom { background: hsla(300, 100%, 50%, 0.99); }\n  }\n}\n</style>\n"]}]}